{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///home/nindang/Documents/ScialNetwork/frontend/src/app/login/page.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, TextField, Button, Typography, Box, Paper, Grid } from '@mui/material';\n\nconst LoginPage: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Handle login logic here\n    console.log({ email, phoneNumber, username, password });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper elevation={3} sx={{ padding: 4, marginTop: 8 }}>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Login\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  value={email}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"phoneNumber\"\n                  label=\"Phone Number\"\n                  name=\"phoneNumber\"\n                  autoComplete=\"tel\"\n                  value={phoneNumber}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPhoneNumber(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  value={username}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setUsername(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  value={password}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPassword(e.target.value)}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </Box>\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAEA,MAAM,YAAsB;IAC1B,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,0BAA0B;QAC1B,QAAQ,GAAG,CAAC;YAAE;YAAO;YAAa;YAAU;QAAS;IACvD;IAEA,qBACE,8OAAC,0MAAA,CAAA,YAAS;QAAC,WAAU;QAAO,UAAS;kBACnC,cAAA,8OAAC,8LAAA,CAAA,QAAK;YAAC,WAAW;YAAG,IAAI;gBAAE,SAAS;gBAAG,WAAW;YAAE;sBAClD,cAAA,8OAAC,wLAAA,CAAA,MAAG;gBACF,IAAI;oBACF,SAAS;oBACT,eAAe;oBACf,YAAY;gBACd;;kCAEA,8OAAC,6MAAA,CAAA,aAAU;wBAAC,WAAU;wBAAK,SAAQ;kCAAK;;;;;;kCAGxC,8OAAC,wLAAA,CAAA,MAAG;wBAAC,WAAU;wBAAO,UAAU;wBAAc,IAAI;4BAAE,IAAI;wBAAE;;0CACxD,8OAAC,2LAAA,CAAA,OAAI;gCAAC,SAAS;gCAAC,SAAS;;kDACvB,8OAAC,2LAAA,CAAA,OAAI;wCAAC,IAAI;wCAAC,IAAI;kDACb,cAAA,8OAAC,0MAAA,CAAA,YAAS;4CACR,QAAQ;4CACR,SAAS;4CACT,IAAG;4CACH,OAAM;4CACN,MAAK;4CACL,cAAa;4CACb,OAAO;4CACP,UAAU,CAAC,IAA2C,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;kDAGjF,8OAAC,2LAAA,CAAA,OAAI;wCAAC,IAAI;wCAAC,IAAI;kDACb,cAAA,8OAAC,0MAAA,CAAA,YAAS;4CACR,QAAQ;4CACR,SAAS;4CACT,IAAG;4CACH,OAAM;4CACN,MAAK;4CACL,cAAa;4CACb,OAAO;4CACP,UAAU,CAAC,IAA2C,eAAe,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;kDAGvF,8OAAC,2LAAA,CAAA,OAAI;wCAAC,IAAI;wCAAC,IAAI;kDACb,cAAA,8OAAC,0MAAA,CAAA,YAAS;4CACR,QAAQ;4CACR,SAAS;4CACT,IAAG;4CACH,OAAM;4CACN,MAAK;4CACL,cAAa;4CACb,OAAO;4CACP,UAAU,CAAC,IAA2C,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;kDAGpF,8OAAC,2LAAA,CAAA,OAAI;wCAAC,IAAI;wCAAC,IAAI;kDACb,cAAA,8OAAC,0MAAA,CAAA,YAAS;4CACR,QAAQ;4CACR,SAAS;4CACT,MAAK;4CACL,OAAM;4CACN,MAAK;4CACL,IAAG;4CACH,cAAa;4CACb,OAAO;4CACP,UAAU,CAAC,IAA2C,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;0CAItF,8OAAC,iMAAA,CAAA,SAAM;gCACL,MAAK;gCACL,SAAS;gCACT,SAAQ;gCACR,IAAI;oCAAE,IAAI;oCAAG,IAAI;gCAAE;0CACpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;uCAEe","debugId":null}}]
}