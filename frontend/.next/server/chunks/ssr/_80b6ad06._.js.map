{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/nindang/Documents/SocialNetwork/frontend/src/app/comment/%5Bid%5D/page.tsx"],"sourcesContent":["// \"use client\";\n\n// import { useState } from \"react\";\n// import { useParams } from \"next/navigation\";\n// import { MessageCircle, Heart, Repeat, Image, ArrowLeftIcon } from \"lucide-react\";\n// import { ReactNode } from \"react\";\n// const CommentPage = () => {\n//   const { id } = useParams(); // Lấy ID từ URL\n//   // const { posts, addComment, addReply } = usePostContext();\n//   const post = posts.find((p) => p.id === Number(id)) || null;\n//   const [newComment, setNewComment] = useState(\"\");\n//   const [liked, setLiked] = useState(false);\n//   const [likeCount, setLikeCount] = useState(0);\n//   const [reposted, setReposted] = useState(false);\n//   const [repostCount, setRepostCount] = useState(0);\n//   const [comments, setComments] = useState(post?.replies?.length || 0);\n//   const [showComment, setShowComment] = useState(false);\n//   const [replyLikes, setReplyLikes] = useState<{ [key: number]: boolean }>({});\n//   const [replyLikeCounts, setReplyLikeCounts] = useState<{ [key: number]: number }>({});\n//   const [replyReplies, setReplyReplies] = useState<{ [key: number]: any[] }>({});\n//   const [replyInputs, setReplyInputs] = useState<{ [key: number]: string }>({});\n//   const [showInputReply, setShowInputReply] = useState<{ [key: number]: boolean }>({});\n//   const toggleReplyInput = (replyId: number) => {\n//     setShowInputReply((prev) => ({\n//       ...prev,\n//       [replyId]: !prev[replyId], // Chỉ bật/tắt input của comment đang bấm\n//     }));\n//   };\n//   // Xử lý đăng comment\n//   const handleComment = () => {\n//     if (!newComment.trim()) return;\n\n//     const newReply = {\n//       id: Date.now(),\n//       username: \"User\",\n//       avatar: \"https://placehold.co/40x40\",\n//       time: \"Vừa xong\",\n//       content: newComment,\n//     };\n\n//     addComment(Number(id), newReply);\n//     setComments((prev) => prev + 1);\n//     setNewComment(\"\");\n//   };\n//   const handleLike = () => {\n//     setLiked(!liked);\n//     setLikeCount((prev) => (liked ? prev - 1 : prev + 1));\n//   };\n\n//   // Xử lý repost\n//   const handleRepost = () => {\n//     setReposted(!reposted);\n//     setRepostCount((prev) => (reposted ? prev - 1 : prev + 1));\n//   };\n  \n\n//   // Hàm xử lý like cho comment\n//   const handleReplyLike = (replyId: number) => {\n//     setReplyLikes((prev) => ({\n//       ...prev,\n//       [replyId]: !prev[replyId],\n//     }));\n//     setReplyLikeCounts((prev) => ({\n//       ...prev,\n//       [replyId]: prev[replyId] ? prev[replyId] - 1 : (prev[replyId] || 0) + 1,\n//     }));\n//   };\n//   const handleReplyInputChange = (replyId: number, value: string) => {\n//     setReplyInputs((prev) => ({\n//       ...prev,\n//       [replyId]: value,\n//     }));\n//   };\n  \n//   // Hàm xử lý khi bấm trả lời\n//   const handleReplySubmit = (postId: number, commentId: number) => {\n//     if (!replyInputs[commentId]?.trim()) return;\n  \n//     const newReply = {\n//       id: Date.now(),\n//       username: \"User\",\n//       avatar: \"https://placehold.co/40x40\",\n//       time: \"Vừa xong\",\n//       content: replyInputs[commentId],\n//     };\n  \n//     addReply(postId, commentId, newReply); // Lưu vào localStorage\n  \n//     setReplyInputs((prev) => ({\n//       ...prev,\n//       [commentId]: \"\",\n//     }));\n//   };\n  \n  \n  \n//   if (!post) return <p className=\"text-center text-gray-500\">Đang tải...</p>;\n\n//   return (\n//     <div className=\"w-full h-screen bg-gray-100 flex flex-col items-center p-4\">\n//       <div className=\"min-w-xl flex items-center justify-between gap-4 mb-4\">\n//         <ArrowLeftIcon size={24} className=\"cursor-pointer\" onClick={() => window.history.back()} />\n//         <h1 className=\"text-xl font-bold mb-4\">Trang chủ</h1>\n//         <div></div>\n        \n//       </div>\n//       <div className=\"min-w-xl h-full mx-auto p-4 bg-white flex flex-col justify-between rounded-lg shadow-md\">\n//         {/* Post chính */}\n//         <div className=\"flex flex-col\">\n//           <div className=\"border-b pb-4\">\n//             <div className=\"flex items-center gap-2\">\n//               <img src={post.avatar} alt=\"avatar\" className=\"w-10 h-10 rounded-full\" />\n//               <div>\n//                 <p className=\"font-semibold\">{post.username}</p>\n//                 <p className=\"text-sm text-gray-500\">{post.time}</p>\n//               </div>\n//             </div>\n//             <p className=\"mt-2\">{post.content}</p>\n//             <div className=\"flex gap-4 text-gray-500 mt-3\">\n//               <ActionButton \n//                   icon={<Heart size={18} className={liked ? \"text-red-500\" : \"text-gray-500\"} />} \n//                   count={likeCount} \n//                   onClick={handleLike}\n//                 />\n//                 <ActionButton icon={<MessageCircle size={18} />} count={comments} onClick={() => setShowComment((prev) => !prev)}/>\n//                 <ActionButton \n//                   icon={<Repeat size={18} className={reposted ? \"text-green-500\" : \"text-gray-500\"} />} \n//                   count={repostCount} \n//                   onClick={handleRepost}\n//                 />\n//             </div>\n//           </div>\n\n//           {/* Danh sách comment */}\n//           <div className=\"mt-4\">\n//             <p className=\"font-semibold\">Thread trả lời</p>\n//             {post.replies && post.replies.length > 0 ? (\n//               post.replies.map((reply) => {\n//                 return (\n//                   <div key={reply.id}>\n//                     <div className=\"flex items-start gap-2 mt-2\">\n//                       <img src={reply.avatar} alt=\"avatar\" className=\"w-8 h-8 rounded-full\" />\n//                       <div>\n//                         <p className=\"font-semibold\">{reply.username}</p>\n//                         <p className=\"text-sm text-gray-500\">{reply.time}</p>\n//                         <p className=\"mt-1\">{reply.content}</p>\n//                       </div>\n//                     </div>\n//                     <div className=\"flex gap-2 text-gray-500 mt-3 ml-10\">\n//                       <ActionButton \n//                         icon={<Heart size={18} className={replyLikes[reply.id] ? \"text-red-500\" : \"text-gray-500\"} />} \n//                         count={replyLikeCounts[reply.id] || 0} \n//                         onClick={() => handleReplyLike(reply.id)}\n//                       />\n//                       {/* Nút trả lời */}\n//                       <button \n//                         className=\"text-blue-500 text-sm ml-10 mt-1\"\n//                         onClick={() => {toggleReplyInput(reply.id)}}\n//                       >\n//                         Trả lời\n//                       </button>\n//                     </div>\n//                     {/* Ô nhập reply */}\n//                     {showInputReply[reply.id] && (\n//                       <div className=\"ml-10 mt-2 flex gap-2\">\n//                         <input\n//                           type=\"text\"\n//                           placeholder=\"Nhập phản hồi...\"\n//                           className=\"flex-grow border p-2 rounded-lg text-sm\"\n//                           value={replyInputs[reply.id] || \"\"}\n//                           onChange={(e) => handleReplyInputChange(reply.id, e.target.value)}\n//                         />\n//                         <button\n//                           className=\"bg-blue-500 text-white px-3 py-1 rounded-lg text-sm disabled:opacity-50\"\n//                           onClick={() => handleReplySubmit(post.id ,reply.id)}\n//                           disabled={!replyInputs[reply.id]?.trim()}\n//                         >\n//                           Gửi\n//                         </button>\n//                       </div>\n//                     )}\n\n//                     {/* Danh sách reply con */}\n//                     {reply.replies && reply.replies.length > 0 && (\n//                       <div className=\"ml-10 mt-2\">\n//                         {reply.replies.map((subReply) => (\n//                           <div key={subReply.id} className=\"flex items-start gap-2 mt-2\">\n//                             <img src={subReply.avatar} alt=\"avatar\" className=\"w-6 h-6 rounded-full\" />\n//                             <div>\n//                               <p className=\"font-semibold text-sm\">{subReply.username}</p>\n//                               <p className=\"text-xs text-gray-500\">{subReply.time}</p>\n//                               <p className=\"mt-1 text-sm\">{subReply.content}</p>\n//                             </div>\n//                           </div>\n//                         ))}\n//                       </div>\n//                     )}\n//                   </div>\n//                 );\n//               })\n//             ) : (\n//               <p className=\"text-gray-500 text-sm mt-2\">Chưa có bình luận nào.</p>\n//             )}\n//           </div>\n//         </div>\n\n//         {/* Ô nhập comment */}\n//         <div className=\"mt-4 flex gap-2 border-t pt-4 items-end\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Viết bình luận...\"\n//             className=\"flex-grow border p-2 rounded-lg\"\n//             value={newComment}\n//             onChange={(e) => setNewComment(e.target.value)}\n//           />\n//           <div>\n//             <Image size={40} className=\"cursor-pointer text-gray-400 hover:text-black\"/>\n//           </div>\n//           <button\n//             className=\"bg-blue-500 text-white px-4 py-2 rounded-lg disabled:opacity-50\"\n//             onClick={handleComment}\n//             disabled={!newComment.trim()}\n//           >\n//             Đăng\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CommentPage;\n// function ActionButton({ icon, count, onClick }: { icon: ReactNode; count: number; onClick: () => void }) {\n//   return (\n//     <button onClick={onClick} className=\"flex items-center space-x-1 text-gray-500 hover:text-black\">\n//       {icon}\n//       <span className=\"text-sm\">{count}</span>\n//     </button>\n//   );\n// }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file:///home/nindang/Documents/SocialNetwork/frontend/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file:///home/nindang/Documents/SocialNetwork/frontend/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAEkD,wBAAwB;AAOhG,iCAAiC;;;;;;;;;;IAI/BM,WAAWC,0DAAAA;AACb,EAAC,QAAA;AAED,MAAA,OAAA;IAAc;IAAA,sCAA0C;YAAE,QAAA;YAAA;YAAA,IAAwB;gBAAsB,EAAC,UAAA;oBAAA;oBAAA;wBAEzG,YAAA;4BAAA;4BAAA,CACA,kCAD4D;4BAC5D,IAAO,MAAMC,cAAc,IAAIX,mBAAmB;kCAChDY,QAAAA,CAAAA,CAAY;gCAAA,QAAA;oCAAA,IAAA;oCAAA;iCAAA;;+BACVC,MAAMZ,UAAUa,QAAQ;;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA;oBAAAA,CAAU;iBAAA;;iBACV,2CAA2C;sBAC3CC,IAAAA,CAAAA;YAAAA;SAAAA,CAAY;;SACZC,UAAU;cACVC,IAAAA;YAAAA,CAAU,EAAE,GAAA;gBACd,OAAA,QAAA;wBAAA;4BACAC,KAAAA,CAAAA,GAAAA,4MAAAA,CAAAA,CAAU,qBAAA,EAAA,MAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,6SAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACRC,OAAAA,GAAAA,6SAAAA,CAAAA,EAAYnB,QAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAAA,6SAAAA,CAAAA,UAAAA,CAAAA,MAAAA,EAAAA;4BACd,MAAA,CAAA,YAAA,CAAA;wBACA;qBAAA","ignoreList":[0],"debugId":null}}]
}