{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/nindang/Documents/SocialNetwork/frontend/src/app/signup/page.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\n\nconst RegisterPage: React.FC = () => {\n  const router = useRouter();\n  const [fullName, setFullName] = useState('');\n  const [username, setUsername] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [touched, setTouched] = useState({\n    fullName: false,\n    username: false,\n    phoneNumber: false,\n    email: false,\n    password: false\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!fullName || !username || !phoneNumber || !email || !password) {\n      // Mark all fields as touched to show errors\n      setTouched({\n        fullName: true,\n        username: true,\n        phoneNumber: true,\n        email: true,\n        password: true\n      });\n      return;\n    }\n\n    setError('');\n    setLoading(true);\n\n    try {\n      const response = await fetch('http://127.0.0.1:8000/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          full_name: fullName,\n          username,\n          phone_number: phoneNumber,\n          email,\n          password\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Đăng ký thất bại');\n      }\n\n      const data = await response.json();\n      router.push('/login');\n\n    } catch (error: any) {\n      console.error('Signup error:', error);\n      setError(error.message || 'Có lỗi xảy ra, vui lòng thử lại');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBlur = (field: keyof typeof touched) => {\n    setTouched(prev => ({ ...prev, [field]: true }));\n  };\n\n  const getErrorMessage = (field: string, value: string) => {\n    if (!touched[field as keyof typeof touched]) return '';\n    if (!value) return 'Trường này là bắt buộc';\n    if (field === 'email' && !/\\S+@\\S+\\.\\S+/.test(value)) {\n      return 'Email không hợp lệ';\n    }\n    if (field === 'phoneNumber' && !/^\\d{10,11}$/.test(value)) {\n      return 'Số điện thoại phải có 10-11 chữ số';\n    }\n    if (field === 'password' && value.length < 6) {\n      return 'Mật khẩu phải có ít nhất 6 ký tự';\n    }\n    return '';\n  };\n\n  return (\n    <div className=\"min-h-screen w-full bg-gray-100 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <h2 className=\"text-center text-3xl font-bold tracking-tight text-gray-900\">\n          Đăng ký\n        </h2>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          {error && (\n            <div className=\"mb-4 text-red-500 text-sm text-center\">\n              {error}\n            </div>\n          )}\n          <form className=\"space-y-6\" onSubmit={handleSubmit} noValidate>\n            <div>\n              <label htmlFor=\"fullName\" className=\"block text-sm font-medium text-gray-700\">\n                Họ và tên <span className=\"text-red-500\">*</span>\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  id=\"fullName\"\n                  name=\"fullName\"\n                  type=\"text\"\n                  autoComplete=\"name\"\n                  required\n                  className={`block w-full rounded-md border ${\n                    getErrorMessage('fullName', fullName) ? 'border-red-500' : 'border-gray-300'\n                  } px-3 py-2 focus:border-black focus:outline-none focus:ring-1 focus:ring-black`}\n                  value={fullName}\n                  onChange={(e) => setFullName(e.target.value)}\n                  onBlur={() => handleBlur('fullName')}\n                />\n                {getErrorMessage('fullName', fullName) && (\n                  <p className=\"mt-1 text-sm text-red-500\">{getErrorMessage('fullName', fullName)}</p>\n                )}\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700\">\n                Tên đăng nhập <span className=\"text-red-500\">*</span>\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  id=\"username\"\n                  name=\"username\"\n                  type=\"text\"\n                  autoComplete=\"username\"\n                  required\n                  className={`block w-full rounded-md border ${\n                    getErrorMessage('username', username) ? 'border-red-500' : 'border-gray-300'\n                  } px-3 py-2 focus:border-black focus:outline-none focus:ring-1 focus:ring-black`}\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  onBlur={() => handleBlur('username')}\n                />\n                {getErrorMessage('username', username) && (\n                  <p className=\"mt-1 text-sm text-red-500\">{getErrorMessage('username', username)}</p>\n                )}\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"phoneNumber\" className=\"block text-sm font-medium text-gray-700\">\n                Số điện thoại <span className=\"text-red-500\">*</span>\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  id=\"phoneNumber\"\n                  name=\"phoneNumber\"\n                  type=\"tel\"\n                  autoComplete=\"tel\"\n                  required\n                  className={`block w-full rounded-md border ${\n                    getErrorMessage('phoneNumber', phoneNumber) ? 'border-red-500' : 'border-gray-300'\n                  } px-3 py-2 focus:border-black focus:outline-none focus:ring-1 focus:ring-black`}\n                  value={phoneNumber}\n                  onChange={(e) => setPhoneNumber(e.target.value)}\n                  onBlur={() => handleBlur('phoneNumber')}\n                />\n                {getErrorMessage('phoneNumber', phoneNumber) && (\n                  <p className=\"mt-1 text-sm text-red-500\">{getErrorMessage('phoneNumber', phoneNumber)}</p>\n                )}\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email <span className=\"text-red-500\">*</span>\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  className={`block w-full rounded-md border ${\n                    getErrorMessage('email', email) ? 'border-red-500' : 'border-gray-300'\n                  } px-3 py-2 focus:border-black focus:outline-none focus:ring-1 focus:ring-black`}\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  onBlur={() => handleBlur('email')}\n                />\n                {getErrorMessage('email', email) && (\n                  <p className=\"mt-1 text-sm text-red-500\">{getErrorMessage('email', email)}</p>\n                )}\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Mật khẩu <span className=\"text-red-500\">*</span>\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"new-password\"\n                  required\n                  className={`block w-full rounded-md border ${\n                    getErrorMessage('password', password) ? 'border-red-500' : 'border-gray-300'\n                  } px-3 py-2 focus:border-black focus:outline-none focus:ring-1 focus:ring-black`}\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  onBlur={() => handleBlur('password')}\n                />\n                {getErrorMessage('password', password) && (\n                  <p className=\"mt-1 text-sm text-red-500\">{getErrorMessage('password', password)}</p>\n                )}\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className=\"flex w-full justify-center rounded-md bg-black px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-black focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {loading ? 'Đang đăng ký...' : 'Đăng ký'}\n              </button>\n              <Link href=\"/login\" className=\"mt-2 block text-center text-sm text-gray-500 hover:text-gray-700\">\n                Đã có tài khoản? Đăng nhập\n              </Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}